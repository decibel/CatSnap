-- THIS IS A GENERATED FILE. DO NOT EDIT!

CREATE TYPE raw_aggregate AS (aggfnoid regproc, aggkind "char", aggnumdirectargs smallint, aggtransfn regproc, aggfinalfn regproc, aggcombinefn regproc, aggmtransfn regproc, aggminvtransfn regproc, aggmfinalfn regproc, aggfinalextra boolean, aggmfinalextra boolean, aggsortop oid, aggtranstype oid, aggtransspace integer, aggmtranstype oid, aggmtransspace integer, agginitval text, aggminitval text);
CREATE TYPE raw_am AS (oid oid, amname text, amhandler regproc);
CREATE TYPE raw_amop AS (oid oid, amopfamily oid, amoplefttype oid, amoprighttype oid, amopstrategy smallint, amoppurpose "char", amopopr oid, amopmethod oid, amopsortfamily oid);
CREATE TYPE raw_amproc AS (oid oid, amprocfamily oid, amproclefttype oid, amprocrighttype oid, amprocnum smallint, amproc regproc);
CREATE TYPE raw_attrdef AS (oid oid, adrelid oid, adnum smallint, adbin pg_node_tree, adsrc text);
CREATE TYPE raw_attribute AS (attrelid oid, attname text, atttypid oid, attstattarget integer, attlen smallint, attnum smallint, attndims integer, attcacheoff integer, atttypmod integer, attbyval boolean, attstorage "char", attalign "char", attnotnull boolean, atthasdef boolean, attisdropped boolean, attislocal boolean, attinhcount integer, attcollation oid, attacl aclitem[], attoptions text[], attfdwoptions text[]);
CREATE TYPE raw_auth_members AS (roleid oid, member oid, grantor oid, admin_option boolean);
CREATE TYPE raw_available_extension_versions AS (name text, version text, installed boolean, superuser boolean, relocatable boolean, schema text, requires name[], comment text);
CREATE TYPE raw_available_extensions AS (name text, default_version text, installed_version text, comment text);
CREATE TYPE raw_cast AS (oid oid, castsource oid, casttarget oid, castfunc oid, castcontext "char", castmethod "char");
CREATE TYPE raw_class AS (oid oid, relname text, relnamespace oid, reltype oid, reloftype oid, relowner oid, relam oid, relfilenode oid, reltablespace oid, relpages integer, reltuples real, relallvisible integer, reltoastrelid oid, relhasindex boolean, relisshared boolean, relpersistence "char", relkind "char", relnatts smallint, relchecks smallint, relhasoids boolean, relhaspkey boolean, relhasrules boolean, relhastriggers boolean, relhassubclass boolean, relrowsecurity boolean, relforcerowsecurity boolean, relispopulated boolean, relreplident "char", relfrozenxid xid, relminmxid xid, relacl aclitem[], reloptions text[]);
CREATE TYPE raw_collation AS (oid oid, collname text, collnamespace oid, collowner oid, collencoding integer, collcollate text, collctype text);
CREATE TYPE raw_config AS (name text, setting text);
CREATE TYPE raw_constraint AS (oid oid, conname text, connamespace oid, contype "char", condeferrable boolean, condeferred boolean, convalidated boolean, conrelid oid, contypid oid, conindid oid, confrelid oid, confupdtype "char", confdeltype "char", confmatchtype "char", conislocal boolean, coninhcount integer, connoinherit boolean, conkey smallint[], confkey smallint[], conpfeqop oid[], conppeqop oid[], conffeqop oid[], conexclop oid[], conbin pg_node_tree, consrc text);
CREATE TYPE raw_conversion AS (oid oid, conname text, connamespace oid, conowner oid, conforencoding integer, contoencoding integer, conproc regproc, condefault boolean);
CREATE TYPE raw_cursors AS (name text, statement text, is_holdable boolean, is_binary boolean, is_scrollable boolean, creation_time timestamp with time zone);
CREATE TYPE raw_database AS (oid oid, datname text, datdba oid, encoding integer, datcollate text, datctype text, datistemplate boolean, datallowconn boolean, datconnlimit integer, datlastsysoid oid, datfrozenxid xid, datminmxid xid, dattablespace oid, datacl aclitem[]);
CREATE TYPE raw_db_role_setting AS (setdatabase oid, setrole oid, setconfig text[]);
CREATE TYPE raw_default_acl AS (oid oid, defaclrole oid, defaclnamespace oid, defaclobjtype "char", defaclacl aclitem[]);
CREATE TYPE raw_depend AS (classid oid, objid oid, objsubid integer, refclassid oid, refobjid oid, refobjsubid integer, deptype "char");
CREATE TYPE raw_description AS (objoid oid, classoid oid, objsubid integer, description text);
CREATE TYPE raw_enum AS (oid oid, enumtypid oid, enumsortorder real, enumlabel text);
CREATE TYPE raw_event_trigger AS (oid oid, evtname text, evtevent text, evtowner oid, evtfoid oid, evtenabled "char", evttags text[]);
CREATE TYPE raw_extension AS (oid oid, extname text, extowner oid, extnamespace oid, extrelocatable boolean, extversion text, extconfig oid[], extcondition text[]);
CREATE TYPE raw_file_settings AS (sourcefile text, sourceline integer, seqno integer, name text, setting text, applied boolean, error text);
CREATE TYPE raw_foreign_data_wrapper AS (oid oid, fdwname text, fdwowner oid, fdwhandler oid, fdwvalidator oid, fdwacl aclitem[], fdwoptions text[]);
CREATE TYPE raw_foreign_server AS (oid oid, srvname text, srvowner oid, srvfdw oid, srvtype text, srvversion text, srvacl aclitem[], srvoptions text[]);
CREATE TYPE raw_foreign_table AS (ftrelid oid, ftserver oid, ftoptions text[]);
CREATE TYPE raw_index AS (indexrelid oid, indrelid oid, indnatts smallint, indisunique boolean, indisprimary boolean, indisexclusion boolean, indimmediate boolean, indisclustered boolean, indisvalid boolean, indcheckxmin boolean, indisready boolean, indislive boolean, indisreplident boolean, indkey int2vector, indcollation oidvector, indclass oidvector, indoption int2vector, indexprs pg_node_tree, indpred pg_node_tree);
CREATE TYPE raw_inherits AS (inhrelid oid, inhparent oid, inhseqno integer);
CREATE TYPE raw_language AS (oid oid, lanname text, lanowner oid, lanispl boolean, lanpltrusted boolean, lanplcallfoid oid, laninline oid, lanvalidator oid, lanacl aclitem[]);
CREATE TYPE raw_largeobject AS (loid oid, pageno integer, data bytea);
CREATE TYPE raw_largeobject_metadata AS (oid oid, lomowner oid, lomacl aclitem[]);
CREATE TYPE raw_locks AS (locktype text, database oid, relation oid, page integer, tuple smallint, virtualxid text, transactionid xid, classid oid, objid oid, objsubid smallint, virtualtransaction text, pid integer, mode text, granted boolean, fastpath boolean);
CREATE TYPE raw_matviews AS (schemaname text, matviewname text, matviewowner text, tablespace text, hasindexes boolean, ispopulated boolean, definition text);
CREATE TYPE raw_namespace AS (oid oid, nspname text, nspowner oid, nspacl aclitem[]);
CREATE TYPE raw_opclass AS (oid oid, opcmethod oid, opcname text, opcnamespace oid, opcowner oid, opcfamily oid, opcintype oid, opcdefault boolean, opckeytype oid);
CREATE TYPE raw_operator AS (oid oid, oprname text, oprnamespace oid, oprowner oid, oprkind "char", oprcanmerge boolean, oprcanhash boolean, oprleft oid, oprright oid, oprresult oid, oprcom oid, oprnegate oid, oprcode regproc, oprrest regproc, oprjoin regproc);
CREATE TYPE raw_opfamily AS (oid oid, opfmethod oid, opfname text, opfnamespace oid, opfowner oid);
CREATE TYPE raw_pltemplate AS (tmplname text, tmpltrusted boolean, tmpldbacreate boolean, tmplhandler text, tmplinline text, tmplvalidator text, tmpllibrary text, tmplacl aclitem[]);
CREATE TYPE raw_policies AS (schemaname text, tablename text, policyname text, roles name[], cmd text, qual text, with_check text);
CREATE TYPE raw_policy AS (oid oid, polname text, polrelid oid, polcmd "char", polroles oid[], polqual pg_node_tree, polwithcheck pg_node_tree);
CREATE TYPE raw_prepared_statements AS (name text, statement text, prepare_time timestamp with time zone, parameter_types regtype[], from_sql boolean);
CREATE TYPE raw_prepared_xacts AS (transaction xid, gid text, prepared timestamp with time zone, owner text, database text);
CREATE TYPE raw_proc AS (oid oid, proname text, pronamespace oid, proowner oid, prolang oid, procost real, prorows real, provariadic oid, protransform regproc, proisagg boolean, proiswindow boolean, prosecdef boolean, proleakproof boolean, proisstrict boolean, proretset boolean, provolatile "char", proparallel "char", pronargs smallint, pronargdefaults smallint, prorettype oid, proargtypes oidvector, proallargtypes oid[], proargmodes "char"[], proargnames text[], proargdefaults pg_node_tree, protrftypes oid[], prosrc text, probin text, proconfig text[], proacl aclitem[]);
CREATE TYPE raw_range AS (rngtypid oid, rngsubtype oid, rngcollation oid, rngsubopc oid, rngcanonical regproc, rngsubdiff regproc);
CREATE TYPE raw_replication_origin AS (roident oid, roname text);
CREATE TYPE raw_replication_origin_status AS (local_id oid, external_id text, remote_lsn pg_lsn, local_lsn pg_lsn);
CREATE TYPE raw_replication_slots AS (slot_name text, plugin text, slot_type text, datoid oid, database text, active boolean, active_pid integer, xmin xid, catalog_xmin xid, restart_lsn pg_lsn, confirmed_flush_lsn pg_lsn);
CREATE TYPE raw_rewrite AS (oid oid, rulename text, ev_class oid, ev_type "char", ev_enabled "char", is_instead boolean, ev_qual pg_node_tree, ev_action pg_node_tree);
CREATE TYPE raw_roles AS (rolname text, rolsuper boolean, rolinherit boolean, rolcreaterole boolean, rolcreatedb boolean, rolcanlogin boolean, rolreplication boolean, rolconnlimit integer, rolpassword text, rolvaliduntil timestamp with time zone, rolbypassrls boolean, rolconfig text[], oid oid);
CREATE TYPE raw_rules AS (schemaname text, tablename text, rulename text, definition text);
CREATE TYPE raw_seclabel AS (objoid oid, classoid oid, objsubid integer, provider text, label text);
CREATE TYPE raw_seclabels AS (objoid oid, classoid oid, objsubid integer, objtype text, objnamespace oid, objname text, provider text, label text);
CREATE TYPE raw_settings AS (name text, setting text, unit text, category text, short_desc text, extra_desc text, context text, vartype text, source text, min_val text, max_val text, enumvals text[], boot_val text, reset_val text, sourcefile text, sourceline integer, pending_restart boolean);
CREATE TYPE raw_shdepend AS (dbid oid, classid oid, objid oid, objsubid integer, refclassid oid, refobjid oid, deptype "char");
CREATE TYPE raw_shdescription AS (objoid oid, classoid oid, description text);
CREATE TYPE raw_shseclabel AS (objoid oid, classoid oid, provider text, label text);
CREATE TYPE raw_stat_activity AS (datid oid, datname text, pid integer, usesysid oid, usename text, application_name text, client_addr inet, client_hostname text, client_port integer, backend_start timestamp with time zone, xact_start timestamp with time zone, query_start timestamp with time zone, state_change timestamp with time zone, wait_event_type text, wait_event text, state text, backend_xid xid, backend_xmin xid, query text);
CREATE TYPE raw_stat_all_indexes AS (relid oid, indexrelid oid, schemaname text, relname text, indexrelname text, idx_scan bigint, idx_tup_read bigint, idx_tup_fetch bigint);
CREATE TYPE raw_stat_all_tables AS (relid oid, schemaname text, relname text, seq_scan bigint, seq_tup_read bigint, idx_scan bigint, idx_tup_fetch bigint, n_tup_ins bigint, n_tup_upd bigint, n_tup_del bigint, n_tup_hot_upd bigint, n_live_tup bigint, n_dead_tup bigint, n_mod_since_analyze bigint, last_vacuum timestamp with time zone, last_autovacuum timestamp with time zone, last_analyze timestamp with time zone, last_autoanalyze timestamp with time zone, vacuum_count bigint, autovacuum_count bigint, analyze_count bigint, autoanalyze_count bigint);
CREATE TYPE raw_stat_archiver AS (archived_count bigint, last_archived_wal text, last_archived_time timestamp with time zone, failed_count bigint, last_failed_wal text, last_failed_time timestamp with time zone, stats_reset timestamp with time zone);
CREATE TYPE raw_stat_bgwriter AS (checkpoints_timed bigint, checkpoints_req bigint, checkpoint_write_time double precision, checkpoint_sync_time double precision, buffers_checkpoint bigint, buffers_clean bigint, maxwritten_clean bigint, buffers_backend bigint, buffers_backend_fsync bigint, buffers_alloc bigint, stats_reset timestamp with time zone);
CREATE TYPE raw_stat_database AS (datid oid, datname text, numbackends integer, xact_commit bigint, xact_rollback bigint, blks_read bigint, blks_hit bigint, tup_returned bigint, tup_fetched bigint, tup_inserted bigint, tup_updated bigint, tup_deleted bigint, conflicts bigint, temp_files bigint, temp_bytes bigint, deadlocks bigint, blk_read_time double precision, blk_write_time double precision, stats_reset timestamp with time zone);
CREATE TYPE raw_stat_database_conflicts AS (datid oid, datname text, confl_tablespace bigint, confl_lock bigint, confl_snapshot bigint, confl_bufferpin bigint, confl_deadlock bigint);
CREATE TYPE raw_stat_replication AS (pid integer, usesysid oid, usename text, application_name text, client_addr inet, client_hostname text, client_port integer, backend_start timestamp with time zone, backend_xmin xid, state text, sent_location pg_lsn, write_location pg_lsn, flush_location pg_lsn, replay_location pg_lsn, sync_priority integer, sync_state text);
CREATE TYPE raw_stat_ssl AS (pid integer, ssl boolean, version text, cipher text, bits integer, compression boolean, clientdn text);
CREATE TYPE raw_stat_sys_indexes AS (relid oid, indexrelid oid, schemaname text, relname text, indexrelname text, idx_scan bigint, idx_tup_read bigint, idx_tup_fetch bigint);
CREATE TYPE raw_stat_sys_tables AS (relid oid, schemaname text, relname text, seq_scan bigint, seq_tup_read bigint, idx_scan bigint, idx_tup_fetch bigint, n_tup_ins bigint, n_tup_upd bigint, n_tup_del bigint, n_tup_hot_upd bigint, n_live_tup bigint, n_dead_tup bigint, n_mod_since_analyze bigint, last_vacuum timestamp with time zone, last_autovacuum timestamp with time zone, last_analyze timestamp with time zone, last_autoanalyze timestamp with time zone, vacuum_count bigint, autovacuum_count bigint, analyze_count bigint, autoanalyze_count bigint);
CREATE TYPE raw_stat_user_functions AS (funcid oid, schemaname text, funcname text, calls bigint, total_time double precision, self_time double precision);
CREATE TYPE raw_stat_user_indexes AS (relid oid, indexrelid oid, schemaname text, relname text, indexrelname text, idx_scan bigint, idx_tup_read bigint, idx_tup_fetch bigint);
CREATE TYPE raw_stat_user_tables AS (relid oid, schemaname text, relname text, seq_scan bigint, seq_tup_read bigint, idx_scan bigint, idx_tup_fetch bigint, n_tup_ins bigint, n_tup_upd bigint, n_tup_del bigint, n_tup_hot_upd bigint, n_live_tup bigint, n_dead_tup bigint, n_mod_since_analyze bigint, last_vacuum timestamp with time zone, last_autovacuum timestamp with time zone, last_analyze timestamp with time zone, last_autoanalyze timestamp with time zone, vacuum_count bigint, autovacuum_count bigint, analyze_count bigint, autoanalyze_count bigint);
CREATE TYPE raw_stat_wal_receiver AS (pid integer, status text, receive_start_lsn pg_lsn, receive_start_tli integer, received_lsn pg_lsn, received_tli integer, last_msg_send_time timestamp with time zone, last_msg_receipt_time timestamp with time zone, latest_end_lsn pg_lsn, latest_end_time timestamp with time zone, slot_name text);
CREATE TYPE raw_stat_xact_all_tables AS (relid oid, schemaname text, relname text, seq_scan bigint, seq_tup_read bigint, idx_scan bigint, idx_tup_fetch bigint, n_tup_ins bigint, n_tup_upd bigint, n_tup_del bigint, n_tup_hot_upd bigint);
CREATE TYPE raw_stat_xact_sys_tables AS (relid oid, schemaname text, relname text, seq_scan bigint, seq_tup_read bigint, idx_scan bigint, idx_tup_fetch bigint, n_tup_ins bigint, n_tup_upd bigint, n_tup_del bigint, n_tup_hot_upd bigint);
CREATE TYPE raw_stat_xact_user_functions AS (funcid oid, schemaname text, funcname text, calls bigint, total_time double precision, self_time double precision);
CREATE TYPE raw_stat_xact_user_tables AS (relid oid, schemaname text, relname text, seq_scan bigint, seq_tup_read bigint, idx_scan bigint, idx_tup_fetch bigint, n_tup_ins bigint, n_tup_upd bigint, n_tup_del bigint, n_tup_hot_upd bigint);
CREATE TYPE raw_statio_all_indexes AS (relid oid, indexrelid oid, schemaname text, relname text, indexrelname text, idx_blks_read bigint, idx_blks_hit bigint);
CREATE TYPE raw_statio_all_sequences AS (relid oid, schemaname text, relname text, blks_read bigint, blks_hit bigint);
CREATE TYPE raw_statio_all_tables AS (relid oid, schemaname text, relname text, heap_blks_read bigint, heap_blks_hit bigint, idx_blks_read bigint, idx_blks_hit bigint, toast_blks_read bigint, toast_blks_hit bigint, tidx_blks_read bigint, tidx_blks_hit bigint);
CREATE TYPE raw_statio_sys_indexes AS (relid oid, indexrelid oid, schemaname text, relname text, indexrelname text, idx_blks_read bigint, idx_blks_hit bigint);
CREATE TYPE raw_statio_sys_sequences AS (relid oid, schemaname text, relname text, blks_read bigint, blks_hit bigint);
CREATE TYPE raw_statio_sys_tables AS (relid oid, schemaname text, relname text, heap_blks_read bigint, heap_blks_hit bigint, idx_blks_read bigint, idx_blks_hit bigint, toast_blks_read bigint, toast_blks_hit bigint, tidx_blks_read bigint, tidx_blks_hit bigint);
CREATE TYPE raw_statio_user_indexes AS (relid oid, indexrelid oid, schemaname text, relname text, indexrelname text, idx_blks_read bigint, idx_blks_hit bigint);
CREATE TYPE raw_statio_user_sequences AS (relid oid, schemaname text, relname text, blks_read bigint, blks_hit bigint);
CREATE TYPE raw_statio_user_tables AS (relid oid, schemaname text, relname text, heap_blks_read bigint, heap_blks_hit bigint, idx_blks_read bigint, idx_blks_hit bigint, toast_blks_read bigint, toast_blks_hit bigint, tidx_blks_read bigint, tidx_blks_hit bigint);
CREATE TYPE raw_stats AS (schemaname text, tablename text, attname text, inherited boolean, null_frac real, avg_width integer, n_distinct real, most_common_vals text, most_common_freqs real[], histogram_bounds text, correlation real, most_common_elems text, most_common_elem_freqs real[], elem_count_histogram real[]);
CREATE TYPE raw_tablespace AS (oid oid, spcname text, spcowner oid, spcacl aclitem[], spcoptions text[]);
CREATE TYPE raw_timezone_abbrevs AS (abbrev text, utc_offset interval, is_dst boolean);
CREATE TYPE raw_timezone_names AS (name text, abbrev text, utc_offset interval, is_dst boolean);
CREATE TYPE raw_transform AS (oid oid, trftype oid, trflang oid, trffromsql regproc, trftosql regproc);
CREATE TYPE raw_trigger AS (oid oid, tgrelid oid, tgname text, tgfoid oid, tgtype smallint, tgenabled "char", tgisinternal boolean, tgconstrrelid oid, tgconstrindid oid, tgconstraint oid, tgdeferrable boolean, tginitdeferred boolean, tgnargs smallint, tgattr int2vector, tgargs bytea, tgqual pg_node_tree);
CREATE TYPE raw_ts_config AS (oid oid, cfgname text, cfgnamespace oid, cfgowner oid, cfgparser oid);
CREATE TYPE raw_ts_config_map AS (mapcfg oid, maptokentype integer, mapseqno integer, mapdict oid);
CREATE TYPE raw_ts_dict AS (oid oid, dictname text, dictnamespace oid, dictowner oid, dicttemplate oid, dictinitoption text);
CREATE TYPE raw_ts_parser AS (oid oid, prsname text, prsnamespace oid, prsstart regproc, prstoken regproc, prsend regproc, prsheadline regproc, prslextype regproc);
CREATE TYPE raw_ts_template AS (oid oid, tmplname text, tmplnamespace oid, tmplinit regproc, tmpllexize regproc);
CREATE TYPE raw_type AS (oid oid, typname text, typnamespace oid, typowner oid, typlen smallint, typbyval boolean, typtype "char", typcategory "char", typispreferred boolean, typisdefined boolean, typdelim "char", typrelid oid, typelem oid, typarray oid, typinput regproc, typoutput regproc, typreceive regproc, typsend regproc, typmodin regproc, typmodout regproc, typanalyze regproc, typalign "char", typstorage "char", typnotnull boolean, typbasetype oid, typtypmod integer, typndims integer, typcollation oid, typdefaultbin pg_node_tree, typdefault text, typacl aclitem[]);
CREATE TYPE raw_user_mapping AS (oid oid, umuser oid, umserver oid, umoptions text[]);
